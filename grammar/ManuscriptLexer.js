// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,14,132,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,0,1,0,5,0,40,8,0,10,
0,12,0,43,9,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,5,1,54,8,1,10,1,12,1,57,
9,1,1,1,1,1,1,2,1,2,1,3,4,3,64,8,3,11,3,12,3,65,1,4,3,4,69,8,4,1,4,1,4,1,
5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,3,12,
89,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
1,13,1,13,1,13,1,13,1,13,1,13,3,13,110,8,13,1,14,1,14,1,14,1,14,1,14,1,14,
1,14,1,14,1,14,1,14,1,14,1,15,4,15,124,8,15,11,15,12,15,125,1,16,4,16,129,
8,16,11,16,12,16,130,1,41,0,17,1,1,3,2,5,0,7,3,9,4,11,5,13,6,15,0,17,7,19,
8,21,9,23,0,25,10,27,11,29,12,31,13,33,14,1,0,7,3,0,10,10,13,13,8232,8233,
2,0,9,9,32,32,3,0,65,90,196,197,214,214,3,0,97,122,228,229,246,246,1,0,48,
57,5,0,33,33,44,44,46,46,58,59,63,63,9,0,34,35,37,37,39,39,42,43,47,47,61,
61,64,64,124,124,8364,8364,136,0,1,1,0,0,0,0,3,1,0,0,0,0,7,1,0,0,0,0,9,1,
0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,1,35,1,0,
0,0,3,49,1,0,0,0,5,60,1,0,0,0,7,63,1,0,0,0,9,68,1,0,0,0,11,72,1,0,0,0,13,
74,1,0,0,0,15,76,1,0,0,0,17,78,1,0,0,0,19,80,1,0,0,0,21,82,1,0,0,0,23,84,
1,0,0,0,25,88,1,0,0,0,27,109,1,0,0,0,29,111,1,0,0,0,31,123,1,0,0,0,33,128,
1,0,0,0,35,36,5,47,0,0,36,37,5,42,0,0,37,41,1,0,0,0,38,40,9,0,0,0,39,38,
1,0,0,0,40,43,1,0,0,0,41,42,1,0,0,0,41,39,1,0,0,0,42,44,1,0,0,0,43,41,1,
0,0,0,44,45,5,42,0,0,45,46,5,47,0,0,46,47,1,0,0,0,47,48,6,0,0,0,48,2,1,0,
0,0,49,50,5,47,0,0,50,51,5,47,0,0,51,55,1,0,0,0,52,54,8,0,0,0,53,52,1,0,
0,0,54,57,1,0,0,0,55,53,1,0,0,0,55,56,1,0,0,0,56,58,1,0,0,0,57,55,1,0,0,
0,58,59,6,1,0,0,59,4,1,0,0,0,60,61,7,1,0,0,61,6,1,0,0,0,62,64,3,5,2,0,63,
62,1,0,0,0,64,65,1,0,0,0,65,63,1,0,0,0,65,66,1,0,0,0,66,8,1,0,0,0,67,69,
5,13,0,0,68,67,1,0,0,0,68,69,1,0,0,0,69,70,1,0,0,0,70,71,5,10,0,0,71,10,
1,0,0,0,72,73,7,2,0,0,73,12,1,0,0,0,74,75,7,3,0,0,75,14,1,0,0,0,76,77,7,
4,0,0,77,16,1,0,0,0,78,79,7,5,0,0,79,18,1,0,0,0,80,81,5,40,0,0,81,20,1,0,
0,0,82,83,5,41,0,0,83,22,1,0,0,0,84,85,5,45,0,0,85,24,1,0,0,0,86,89,7,6,
0,0,87,89,3,23,11,0,88,86,1,0,0,0,88,87,1,0,0,0,89,26,1,0,0,0,90,91,5,83,
0,0,91,92,5,89,0,0,92,93,5,78,0,0,93,94,5,79,0,0,94,95,5,80,0,0,95,96,5,
83,0,0,96,97,5,73,0,0,97,110,5,83,0,0,98,99,5,84,0,0,99,100,5,73,0,0,100,
101,5,73,0,0,101,102,5,86,0,0,102,103,5,73,0,0,103,104,5,83,0,0,104,105,
5,84,0,0,105,106,5,69,0,0,106,107,5,76,0,0,107,108,5,77,0,0,108,110,5,196,
0,0,109,90,1,0,0,0,109,98,1,0,0,0,110,28,1,0,0,0,111,112,5,75,0,0,112,113,
5,79,0,0,113,114,5,72,0,0,114,115,5,84,0,0,115,116,5,65,0,0,116,117,5,85,
0,0,117,118,5,75,0,0,118,119,5,83,0,0,119,120,5,69,0,0,120,121,5,84,0,0,
121,30,1,0,0,0,122,124,3,11,5,0,123,122,1,0,0,0,124,125,1,0,0,0,125,123,
1,0,0,0,125,126,1,0,0,0,126,32,1,0,0,0,127,129,3,15,7,0,128,127,1,0,0,0,
129,130,1,0,0,0,130,128,1,0,0,0,130,131,1,0,0,0,131,34,1,0,0,0,9,0,41,55,
65,68,88,109,125,130,1,0,1,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ManuscriptLexer extends antlr4.Lexer {

    static grammarFileName = "ManuscriptLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, null, null, null, 
                         "'('", "')'", null, null, "'KOHTAUKSET'" ];
	static symbolicNames = [ null, "MultiLineComment", "SingleLineComment", 
                          "WSS", "EOL", "Capital", "Minuscule", "Punctuation", 
                          "LeftParenthesis", "RightParenthesis", "Extra", 
                          "Synopsis", "Scene", "CapitalWord", "Number" ];
	static ruleNames = [ "MultiLineComment", "SingleLineComment", "WhiteSpace", 
                      "WSS", "EOL", "Capital", "Minuscule", "Digit", "Punctuation", 
                      "LeftParenthesis", "RightParenthesis", "Minus", "Extra", 
                      "Synopsis", "Scene", "CapitalWord", "Number" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

ManuscriptLexer.EOF = antlr4.Token.EOF;
ManuscriptLexer.MultiLineComment = 1;
ManuscriptLexer.SingleLineComment = 2;
ManuscriptLexer.WSS = 3;
ManuscriptLexer.EOL = 4;
ManuscriptLexer.Capital = 5;
ManuscriptLexer.Minuscule = 6;
ManuscriptLexer.Punctuation = 7;
ManuscriptLexer.LeftParenthesis = 8;
ManuscriptLexer.RightParenthesis = 9;
ManuscriptLexer.Extra = 10;
ManuscriptLexer.Synopsis = 11;
ManuscriptLexer.Scene = 12;
ManuscriptLexer.CapitalWord = 13;
ManuscriptLexer.Number = 14;



