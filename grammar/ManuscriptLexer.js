// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,14,149,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,0,1,
0,1,0,5,0,44,8,0,10,0,12,0,47,9,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,5,
1,58,8,1,10,1,12,1,61,9,1,1,1,1,1,1,2,1,2,1,3,4,3,68,8,3,11,3,12,3,69,1,
4,3,4,73,8,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,
11,1,11,1,12,1,12,3,12,93,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,114,8,13,1,14,
1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,
15,1,15,1,15,1,15,1,16,4,16,136,8,16,11,16,12,16,137,1,17,4,17,141,8,17,
11,17,12,17,142,1,18,4,18,146,8,18,11,18,12,18,147,1,45,0,19,1,1,3,2,5,0,
7,3,9,4,11,0,13,0,15,0,17,5,19,6,21,7,23,0,25,8,27,9,29,10,31,11,33,12,35,
13,37,14,1,0,7,3,0,10,10,13,13,8232,8233,2,0,9,9,32,32,3,0,65,90,196,197,
214,214,3,0,97,122,228,229,246,246,1,0,48,57,5,0,33,33,44,44,46,46,58,59,
63,63,9,0,34,35,37,37,39,39,42,43,47,47,61,61,64,64,124,124,8364,8364,152,
0,1,1,0,0,0,0,3,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
0,0,21,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,53,1,0,0,0,5,64,1,0,0,0,
7,67,1,0,0,0,9,72,1,0,0,0,11,76,1,0,0,0,13,78,1,0,0,0,15,80,1,0,0,0,17,82,
1,0,0,0,19,84,1,0,0,0,21,86,1,0,0,0,23,88,1,0,0,0,25,92,1,0,0,0,27,113,1,
0,0,0,29,115,1,0,0,0,31,126,1,0,0,0,33,135,1,0,0,0,35,140,1,0,0,0,37,145,
1,0,0,0,39,40,5,47,0,0,40,41,5,42,0,0,41,45,1,0,0,0,42,44,9,0,0,0,43,42,
1,0,0,0,44,47,1,0,0,0,45,46,1,0,0,0,45,43,1,0,0,0,46,48,1,0,0,0,47,45,1,
0,0,0,48,49,5,42,0,0,49,50,5,47,0,0,50,51,1,0,0,0,51,52,6,0,0,0,52,2,1,0,
0,0,53,54,5,47,0,0,54,55,5,47,0,0,55,59,1,0,0,0,56,58,8,0,0,0,57,56,1,0,
0,0,58,61,1,0,0,0,59,57,1,0,0,0,59,60,1,0,0,0,60,62,1,0,0,0,61,59,1,0,0,
0,62,63,6,1,0,0,63,4,1,0,0,0,64,65,7,1,0,0,65,6,1,0,0,0,66,68,3,5,2,0,67,
66,1,0,0,0,68,69,1,0,0,0,69,67,1,0,0,0,69,70,1,0,0,0,70,8,1,0,0,0,71,73,
5,13,0,0,72,71,1,0,0,0,72,73,1,0,0,0,73,74,1,0,0,0,74,75,5,10,0,0,75,10,
1,0,0,0,76,77,7,2,0,0,77,12,1,0,0,0,78,79,7,3,0,0,79,14,1,0,0,0,80,81,7,
4,0,0,81,16,1,0,0,0,82,83,7,5,0,0,83,18,1,0,0,0,84,85,5,40,0,0,85,20,1,0,
0,0,86,87,5,41,0,0,87,22,1,0,0,0,88,89,5,45,0,0,89,24,1,0,0,0,90,93,7,6,
0,0,91,93,3,23,11,0,92,90,1,0,0,0,92,91,1,0,0,0,93,26,1,0,0,0,94,95,5,83,
0,0,95,96,5,89,0,0,96,97,5,78,0,0,97,98,5,79,0,0,98,99,5,80,0,0,99,100,5,
83,0,0,100,101,5,73,0,0,101,114,5,83,0,0,102,103,5,84,0,0,103,104,5,73,0,
0,104,105,5,73,0,0,105,106,5,86,0,0,106,107,5,73,0,0,107,108,5,83,0,0,108,
109,5,84,0,0,109,110,5,69,0,0,110,111,5,76,0,0,111,112,5,77,0,0,112,114,
5,196,0,0,113,94,1,0,0,0,113,102,1,0,0,0,114,28,1,0,0,0,115,116,5,75,0,0,
116,117,5,79,0,0,117,118,5,72,0,0,118,119,5,84,0,0,119,120,5,65,0,0,120,
121,5,85,0,0,121,122,5,75,0,0,122,123,5,83,0,0,123,124,5,69,0,0,124,125,
5,84,0,0,125,30,1,0,0,0,126,127,5,69,0,0,127,128,5,70,0,0,128,129,5,69,0,
0,129,130,5,75,0,0,130,131,5,84,0,0,131,132,5,73,0,0,132,133,5,84,0,0,133,
32,1,0,0,0,134,136,3,11,5,0,135,134,1,0,0,0,136,137,1,0,0,0,137,135,1,0,
0,0,137,138,1,0,0,0,138,34,1,0,0,0,139,141,3,13,6,0,140,139,1,0,0,0,141,
142,1,0,0,0,142,140,1,0,0,0,142,143,1,0,0,0,143,36,1,0,0,0,144,146,3,15,
7,0,145,144,1,0,0,0,146,147,1,0,0,0,147,145,1,0,0,0,147,148,1,0,0,0,148,
38,1,0,0,0,10,0,45,59,69,72,92,113,137,142,147,1,0,1,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ManuscriptLexer extends antlr4.Lexer {

    static grammarFileName = "ManuscriptLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, null, "'('", "')'", 
                         null, null, "'KOHTAUKSET'", "'EFEKTIT'" ];
	static symbolicNames = [ null, "MultiLineComment", "SingleLineComment", 
                          "WSS", "EOL", "Punctuation", "LeftParenthesis", 
                          "RightParenthesis", "Extra", "Synopsis", "Scene", 
                          "Effects", "CapitalWord", "MinusculeWord", "Number" ];
	static ruleNames = [ "MultiLineComment", "SingleLineComment", "WhiteSpace", 
                      "WSS", "EOL", "Capital", "Minuscule", "Digit", "Punctuation", 
                      "LeftParenthesis", "RightParenthesis", "Minus", "Extra", 
                      "Synopsis", "Scene", "Effects", "CapitalWord", "MinusculeWord", 
                      "Number" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

ManuscriptLexer.EOF = antlr4.Token.EOF;
ManuscriptLexer.MultiLineComment = 1;
ManuscriptLexer.SingleLineComment = 2;
ManuscriptLexer.WSS = 3;
ManuscriptLexer.EOL = 4;
ManuscriptLexer.Punctuation = 5;
ManuscriptLexer.LeftParenthesis = 6;
ManuscriptLexer.RightParenthesis = 7;
ManuscriptLexer.Extra = 8;
ManuscriptLexer.Synopsis = 9;
ManuscriptLexer.Scene = 10;
ManuscriptLexer.Effects = 11;
ManuscriptLexer.CapitalWord = 12;
ManuscriptLexer.MinusculeWord = 13;
ManuscriptLexer.Number = 14;



