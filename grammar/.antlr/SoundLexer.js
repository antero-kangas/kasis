// Generated from /Users/antero/Rojektit/kasis/grammar/SoundLexer.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u0010\u0086\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0003\u0002\u0003\u0002",
    "\u0003\u0002\u0003\u0002\u0007\u0002*\n\u0002\f\u0002\u000e\u0002-\u000b",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0007\u00038\n\u0003\f\u0003",
    "\u000e\u0003;\u000b\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0005\u0005D\n\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003",
    "\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0005\nS",
    "\n\n\u0003\n\u0006\nV\n\n\r\n\u000e\nW\u0003\n\u0003\n\u0006\n\\\n\n",
    "\r\n\u000e\n]\u0005\n`\n\n\u0003\u000b\u0003\u000b\u0007\u000bd\n\u000b",
    "\f\u000b\u000e\u000bg\u000b\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003",
    "\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0007",
    "\u0010s\n\u0010\f\u0010\u000e\u0010v\u000b\u0010\u0003\u0010\u0003\u0010",
    "\u0003\u0011\u0003\u0011\u0007\u0011|\n\u0011\f\u0011\u000e\u0011\u007f",
    "\u000b\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0005\u0012",
    "\u0085\n\u0012\u0003+\u0002\u0013\u0003\u0003\u0005\u0004\u0007\u0005",
    "\t\u0006\u000b\u0007\r\b\u000f\t\u0011\u0002\u0013\n\u0015\u000b\u0017",
    "\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0002!\u0002#\u0010\u0003\u0002",
    "\n\u0005\u0002\f\f\u000f\u000f\u202a\u202b\u0004\u0002\u000b\u000b\"",
    "\"\u0003\u00022;\u0004\u0002--//\t\u0002C\\aac|\u00c6\u00c7\u00d8\u00d8",
    "\u00e6\u00e7\u00f8\u00f8\n\u00022;C\\aac|\u00c6\u00c7\u00d8\u00d8\u00e6",
    "\u00e7\u00f8\u00f8\u0003\u0002$$\u0003\u0002))\u0002\u008d\u0002\u0003",
    "\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007",
    "\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b",
    "\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f",
    "\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015",
    "\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019",
    "\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d",
    "\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0003%\u0003",
    "\u0002\u0002\u0002\u00053\u0003\u0002\u0002\u0002\u0007>\u0003\u0002",
    "\u0002\u0002\tC\u0003\u0002\u0002\u0002\u000bI\u0003\u0002\u0002\u0002",
    "\rK\u0003\u0002\u0002\u0002\u000fM\u0003\u0002\u0002\u0002\u0011O\u0003",
    "\u0002\u0002\u0002\u0013R\u0003\u0002\u0002\u0002\u0015a\u0003\u0002",
    "\u0002\u0002\u0017h\u0003\u0002\u0002\u0002\u0019j\u0003\u0002\u0002",
    "\u0002\u001bl\u0003\u0002\u0002\u0002\u001dn\u0003\u0002\u0002\u0002",
    "\u001fp\u0003\u0002\u0002\u0002!y\u0003\u0002\u0002\u0002#\u0084\u0003",
    "\u0002\u0002\u0002%&\u00071\u0002\u0002&\'\u0007,\u0002\u0002\'+\u0003",
    "\u0002\u0002\u0002(*\u000b\u0002\u0002\u0002)(\u0003\u0002\u0002\u0002",
    "*-\u0003\u0002\u0002\u0002+,\u0003\u0002\u0002\u0002+)\u0003\u0002\u0002",
    "\u0002,.\u0003\u0002\u0002\u0002-+\u0003\u0002\u0002\u0002./\u0007,",
    "\u0002\u0002/0\u00071\u0002\u000201\u0003\u0002\u0002\u000212\b\u0002",
    "\u0002\u00022\u0004\u0003\u0002\u0002\u000234\u00071\u0002\u000245\u0007",
    "1\u0002\u000259\u0003\u0002\u0002\u000268\n\u0002\u0002\u000276\u0003",
    "\u0002\u0002\u00028;\u0003\u0002\u0002\u000297\u0003\u0002\u0002\u0002",
    "9:\u0003\u0002\u0002\u0002:<\u0003\u0002\u0002\u0002;9\u0003\u0002\u0002",
    "\u0002<=\b\u0003\u0002\u0002=\u0006\u0003\u0002\u0002\u0002>?\t\u0003",
    "\u0002\u0002?@\u0003\u0002\u0002\u0002@A\b\u0004\u0003\u0002A\b\u0003",
    "\u0002\u0002\u0002BD\u0007\u000f\u0002\u0002CB\u0003\u0002\u0002\u0002",
    "CD\u0003\u0002\u0002\u0002DE\u0003\u0002\u0002\u0002EF\u0007\f\u0002",
    "\u0002FG\u0003\u0002\u0002\u0002GH\b\u0005\u0003\u0002H\n\u0003\u0002",
    "\u0002\u0002IJ\u0007=\u0002\u0002J\f\u0003\u0002\u0002\u0002KL\u0007",
    ".\u0002\u0002L\u000e\u0003\u0002\u0002\u0002MN\u0007?\u0002\u0002N\u0010",
    "\u0003\u0002\u0002\u0002OP\t\u0004\u0002\u0002P\u0012\u0003\u0002\u0002",
    "\u0002QS\t\u0005\u0002\u0002RQ\u0003\u0002\u0002\u0002RS\u0003\u0002",
    "\u0002\u0002SU\u0003\u0002\u0002\u0002TV\u0005\u0011\t\u0002UT\u0003",
    "\u0002\u0002\u0002VW\u0003\u0002\u0002\u0002WU\u0003\u0002\u0002\u0002",
    "WX\u0003\u0002\u0002\u0002X_\u0003\u0002\u0002\u0002Y[\u00070\u0002",
    "\u0002Z\\\u0005\u0011\t\u0002[Z\u0003\u0002\u0002\u0002\\]\u0003\u0002",
    "\u0002\u0002][\u0003\u0002\u0002\u0002]^\u0003\u0002\u0002\u0002^`\u0003",
    "\u0002\u0002\u0002_Y\u0003\u0002\u0002\u0002_`\u0003\u0002\u0002\u0002",
    "`\u0014\u0003\u0002\u0002\u0002ae\t\u0006\u0002\u0002bd\t\u0007\u0002",
    "\u0002cb\u0003\u0002\u0002\u0002dg\u0003\u0002\u0002\u0002ec\u0003\u0002",
    "\u0002\u0002ef\u0003\u0002\u0002\u0002f\u0016\u0003\u0002\u0002\u0002",
    "ge\u0003\u0002\u0002\u0002hi\u0007*\u0002\u0002i\u0018\u0003\u0002\u0002",
    "\u0002jk\u0007+\u0002\u0002k\u001a\u0003\u0002\u0002\u0002lm\u0007]",
    "\u0002\u0002m\u001c\u0003\u0002\u0002\u0002no\u0007_\u0002\u0002o\u001e",
    "\u0003\u0002\u0002\u0002pt\u0007$\u0002\u0002qs\n\b\u0002\u0002rq\u0003",
    "\u0002\u0002\u0002sv\u0003\u0002\u0002\u0002tr\u0003\u0002\u0002\u0002",
    "tu\u0003\u0002\u0002\u0002uw\u0003\u0002\u0002\u0002vt\u0003\u0002\u0002",
    "\u0002wx\u0007$\u0002\u0002x \u0003\u0002\u0002\u0002y}\u0007)\u0002",
    "\u0002z|\n\t\u0002\u0002{z\u0003\u0002\u0002\u0002|\u007f\u0003\u0002",
    "\u0002\u0002}{\u0003\u0002\u0002\u0002}~\u0003\u0002\u0002\u0002~\u0080",
    "\u0003\u0002\u0002\u0002\u007f}\u0003\u0002\u0002\u0002\u0080\u0081",
    "\u0007)\u0002\u0002\u0081\"\u0003\u0002\u0002\u0002\u0082\u0085\u0005",
    "\u001f\u0010\u0002\u0083\u0085\u0005!\u0011\u0002\u0084\u0082\u0003",
    "\u0002\u0002\u0002\u0084\u0083\u0003\u0002\u0002\u0002\u0085$\u0003",
    "\u0002\u0002\u0002\u000e\u0002+9CRW]_et}\u0084\u0004\u0002\u0003\u0002",
    "\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class SoundLexer extends antlr4.Lexer {

    static grammarFileName = "SoundLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, "';'", "','", "'='", 
                         null, null, "'('", "')'", "'['", "']'" ];
	static symbolicNames = [ null, "MultiLineComment", "SingleLineComment", 
                          "WhiteSpace", "EOL", "Semicolon", "Comma", "Equal", 
                          "Number", "Id", "LParen", "RParen", "LBracket", 
                          "RBracket", "String" ];
	static ruleNames = [ "MultiLineComment", "SingleLineComment", "WhiteSpace", 
                      "EOL", "Semicolon", "Comma", "Equal", "Digit", "Number", 
                      "Id", "LParen", "RParen", "LBracket", "RBracket", 
                      "DQString", "SQString", "String" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

SoundLexer.EOF = antlr4.Token.EOF;
SoundLexer.MultiLineComment = 1;
SoundLexer.SingleLineComment = 2;
SoundLexer.WhiteSpace = 3;
SoundLexer.EOL = 4;
SoundLexer.Semicolon = 5;
SoundLexer.Comma = 6;
SoundLexer.Equal = 7;
SoundLexer.Number = 8;
SoundLexer.Id = 9;
SoundLexer.LParen = 10;
SoundLexer.RParen = 11;
SoundLexer.LBracket = 12;
SoundLexer.RBracket = 13;
SoundLexer.String = 14;



