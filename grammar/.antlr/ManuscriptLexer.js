// Generated from /Users/antero/Rojektit/kasis/grammar/ManuscriptLexer.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u0010\u0097\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002",
    "\u0007\u0002.\n\u0002\f\u0002\u000e\u00021\u000b\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0007\u0003<\n\u0003\f\u0003\u000e\u0003?\u000b\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0006\u0005",
    "F\n\u0005\r\u0005\u000e\u0005G\u0003\u0006\u0005\u0006K\n\u0006\u0003",
    "\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003",
    "\r\u0003\u000e\u0003\u000e\u0005\u000e_\n\u000e\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0005\u000f",
    "t\n\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010",
    "\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0012\u0006\u0012\u008a\n\u0012\r\u0012",
    "\u000e\u0012\u008b\u0003\u0013\u0006\u0013\u008f\n\u0013\r\u0013\u000e",
    "\u0013\u0090\u0003\u0014\u0006\u0014\u0094\n\u0014\r\u0014\u000e\u0014",
    "\u0095\u0003/\u0002\u0015\u0003\u0003\u0005\u0004\u0007\u0002\t\u0005",
    "\u000b\u0006\r\u0002\u000f\u0002\u0011\u0002\u0013\u0007\u0015\b\u0017",
    "\t\u0019\u0002\u001b\n\u001d\u000b\u001f\f!\r#\u000e%\u000f\'\u0010",
    "\u0003\u0002\t\u0005\u0002\f\f\u000f\u000f\u202a\u202b\u0004\u0002\u000b",
    "\u000b\"\"\u0005\u0002C\\\u00c6\u00c7\u00d8\u00d8\u0005\u0002c|\u00e6",
    "\u00e7\u00f8\u00f8\u0003\u00022;\u0007\u0002##..00<=AA\u000b\u0002$",
    "%\'\')),-11??BB~~\u20ae\u20ae\u0002\u009a\u0002\u0003\u0003\u0002\u0002",
    "\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002",
    "\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002",
    "\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002",
    "\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002",
    "\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002",
    "\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002",
    "\u0002\'\u0003\u0002\u0002\u0002\u0003)\u0003\u0002\u0002\u0002\u0005",
    "7\u0003\u0002\u0002\u0002\u0007B\u0003\u0002\u0002\u0002\tE\u0003\u0002",
    "\u0002\u0002\u000bJ\u0003\u0002\u0002\u0002\rN\u0003\u0002\u0002\u0002",
    "\u000fP\u0003\u0002\u0002\u0002\u0011R\u0003\u0002\u0002\u0002\u0013",
    "T\u0003\u0002\u0002\u0002\u0015V\u0003\u0002\u0002\u0002\u0017X\u0003",
    "\u0002\u0002\u0002\u0019Z\u0003\u0002\u0002\u0002\u001b^\u0003\u0002",
    "\u0002\u0002\u001ds\u0003\u0002\u0002\u0002\u001fu\u0003\u0002\u0002",
    "\u0002!\u0080\u0003\u0002\u0002\u0002#\u0089\u0003\u0002\u0002\u0002",
    "%\u008e\u0003\u0002\u0002\u0002\'\u0093\u0003\u0002\u0002\u0002)*\u0007",
    "1\u0002\u0002*+\u0007,\u0002\u0002+/\u0003\u0002\u0002\u0002,.\u000b",
    "\u0002\u0002\u0002-,\u0003\u0002\u0002\u0002.1\u0003\u0002\u0002\u0002",
    "/0\u0003\u0002\u0002\u0002/-\u0003\u0002\u0002\u000202\u0003\u0002\u0002",
    "\u00021/\u0003\u0002\u0002\u000223\u0007,\u0002\u000234\u00071\u0002",
    "\u000245\u0003\u0002\u0002\u000256\b\u0002\u0002\u00026\u0004\u0003",
    "\u0002\u0002\u000278\u00071\u0002\u000289\u00071\u0002\u00029=\u0003",
    "\u0002\u0002\u0002:<\n\u0002\u0002\u0002;:\u0003\u0002\u0002\u0002<",
    "?\u0003\u0002\u0002\u0002=;\u0003\u0002\u0002\u0002=>\u0003\u0002\u0002",
    "\u0002>@\u0003\u0002\u0002\u0002?=\u0003\u0002\u0002\u0002@A\b\u0003",
    "\u0002\u0002A\u0006\u0003\u0002\u0002\u0002BC\t\u0003\u0002\u0002C\b",
    "\u0003\u0002\u0002\u0002DF\u0005\u0007\u0004\u0002ED\u0003\u0002\u0002",
    "\u0002FG\u0003\u0002\u0002\u0002GE\u0003\u0002\u0002\u0002GH\u0003\u0002",
    "\u0002\u0002H\n\u0003\u0002\u0002\u0002IK\u0007\u000f\u0002\u0002JI",
    "\u0003\u0002\u0002\u0002JK\u0003\u0002\u0002\u0002KL\u0003\u0002\u0002",
    "\u0002LM\u0007\f\u0002\u0002M\f\u0003\u0002\u0002\u0002NO\t\u0004\u0002",
    "\u0002O\u000e\u0003\u0002\u0002\u0002PQ\t\u0005\u0002\u0002Q\u0010\u0003",
    "\u0002\u0002\u0002RS\t\u0006\u0002\u0002S\u0012\u0003\u0002\u0002\u0002",
    "TU\t\u0007\u0002\u0002U\u0014\u0003\u0002\u0002\u0002VW\u0007*\u0002",
    "\u0002W\u0016\u0003\u0002\u0002\u0002XY\u0007+\u0002\u0002Y\u0018\u0003",
    "\u0002\u0002\u0002Z[\u0007/\u0002\u0002[\u001a\u0003\u0002\u0002\u0002",
    "\\_\t\b\u0002\u0002]_\u0005\u0019\r\u0002^\\\u0003\u0002\u0002\u0002",
    "^]\u0003\u0002\u0002\u0002_\u001c\u0003\u0002\u0002\u0002`a\u0007U\u0002",
    "\u0002ab\u0007[\u0002\u0002bc\u0007P\u0002\u0002cd\u0007Q\u0002\u0002",
    "de\u0007R\u0002\u0002ef\u0007U\u0002\u0002fg\u0007K\u0002\u0002gt\u0007",
    "U\u0002\u0002hi\u0007V\u0002\u0002ij\u0007K\u0002\u0002jk\u0007K\u0002",
    "\u0002kl\u0007X\u0002\u0002lm\u0007K\u0002\u0002mn\u0007U\u0002\u0002",
    "no\u0007V\u0002\u0002op\u0007G\u0002\u0002pq\u0007N\u0002\u0002qr\u0007",
    "O\u0002\u0002rt\u0007\u00c6\u0002\u0002s`\u0003\u0002\u0002\u0002sh",
    "\u0003\u0002\u0002\u0002t\u001e\u0003\u0002\u0002\u0002uv\u0007M\u0002",
    "\u0002vw\u0007Q\u0002\u0002wx\u0007J\u0002\u0002xy\u0007V\u0002\u0002",
    "yz\u0007C\u0002\u0002z{\u0007W\u0002\u0002{|\u0007M\u0002\u0002|}\u0007",
    "U\u0002\u0002}~\u0007G\u0002\u0002~\u007f\u0007V\u0002\u0002\u007f ",
    "\u0003\u0002\u0002\u0002\u0080\u0081\u0007G\u0002\u0002\u0081\u0082",
    "\u0007H\u0002\u0002\u0082\u0083\u0007G\u0002\u0002\u0083\u0084\u0007",
    "M\u0002\u0002\u0084\u0085\u0007V\u0002\u0002\u0085\u0086\u0007K\u0002",
    "\u0002\u0086\u0087\u0007V\u0002\u0002\u0087\"\u0003\u0002\u0002\u0002",
    "\u0088\u008a\u0005\r\u0007\u0002\u0089\u0088\u0003\u0002\u0002\u0002",
    "\u008a\u008b\u0003\u0002\u0002\u0002\u008b\u0089\u0003\u0002\u0002\u0002",
    "\u008b\u008c\u0003\u0002\u0002\u0002\u008c$\u0003\u0002\u0002\u0002",
    "\u008d\u008f\u0005\u000f\b\u0002\u008e\u008d\u0003\u0002\u0002\u0002",
    "\u008f\u0090\u0003\u0002\u0002\u0002\u0090\u008e\u0003\u0002\u0002\u0002",
    "\u0090\u0091\u0003\u0002\u0002\u0002\u0091&\u0003\u0002\u0002\u0002",
    "\u0092\u0094\u0005\u0011\t\u0002\u0093\u0092\u0003\u0002\u0002\u0002",
    "\u0094\u0095\u0003\u0002\u0002\u0002\u0095\u0093\u0003\u0002\u0002\u0002",
    "\u0095\u0096\u0003\u0002\u0002\u0002\u0096(\u0003\u0002\u0002\u0002",
    "\f\u0002/=GJ^s\u008b\u0090\u0095\u0003\u0002\u0003\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ManuscriptLexer extends antlr4.Lexer {

    static grammarFileName = "ManuscriptLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, null, null, "'('", "')'", 
                         null, null, "'KOHTAUKSET'", "'EFEKTIT'" ];
	static symbolicNames = [ null, "MultiLineComment", "SingleLineComment", 
                          "WSS", "EOL", "Punctuation", "LeftParenthesis", 
                          "RightParenthesis", "Extra", "Synopsis", "Scene", 
                          "Effects", "CapitalWord", "MinusculeWord", "Number" ];
	static ruleNames = [ "MultiLineComment", "SingleLineComment", "WhiteSpace", 
                      "WSS", "EOL", "Capital", "Minuscule", "Digit", "Punctuation", 
                      "LeftParenthesis", "RightParenthesis", "Minus", "Extra", 
                      "Synopsis", "Scene", "Effects", "CapitalWord", "MinusculeWord", 
                      "Number" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

ManuscriptLexer.EOF = antlr4.Token.EOF;
ManuscriptLexer.MultiLineComment = 1;
ManuscriptLexer.SingleLineComment = 2;
ManuscriptLexer.WSS = 3;
ManuscriptLexer.EOL = 4;
ManuscriptLexer.Punctuation = 5;
ManuscriptLexer.LeftParenthesis = 6;
ManuscriptLexer.RightParenthesis = 7;
ManuscriptLexer.Extra = 8;
ManuscriptLexer.Synopsis = 9;
ManuscriptLexer.Scene = 10;
ManuscriptLexer.Effects = 11;
ManuscriptLexer.CapitalWord = 12;
ManuscriptLexer.MinusculeWord = 13;
ManuscriptLexer.Number = 14;



